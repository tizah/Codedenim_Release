
@model CodeninModel.Module

@{
    ViewBag.Title = "Create Module";
    //Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<div class="container-fluid">

    <h2>Create</h2>
<form id="myform" onsubmit="return false;">
   
        @Html.AntiForgeryToken()
            
        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.CourseId, "CourseId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CourseId", null, htmlAttributes: new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.CourseId, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModuleName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModuleName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModuleName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModuleDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModuleDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModuleDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ExpectedTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExpectedTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExpectedTime, "", new { @class = "text-danger" })
                </div>
            </div>

            @if (Model != null && Model.CourseId > 0)
            {
                <input id="btnsubmit" type="submit" value="Update" class="btn btn-info" />
            }
            else
            {
                <input id="btnsubmit" type="submit" value="Save" class="btn btn-info" />
            }
            <a href="#" class="btn btn-danger" data-dismiss="modal">Cancel</a>
           
        </div>
    </form>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

       
</div>

<script type="text/javascript">

    $("#btnsubmit").click(function () {

        var data = $("#myform").serialize();
      
        $.ajax({
            type: "POST",
            url: "/Modules/CreatePartial",
            data: data,
            success: function (data) {
                if (data.status) {
                    $('#CreateModule').modal("hide");
                    $('#myform')[0].reset();
                    toastr["success"](data.message);
                } else {
                    //$('#actionsList').modal("hide");
                    toastr["error"]("required field where not completed");
                }

            }
        });

 
    });


</script>


