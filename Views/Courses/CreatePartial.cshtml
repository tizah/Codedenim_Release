
@model CodeninModel.Module

@{
    ViewBag.Title = "Create Module";
    //Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<div class="container-fluid">

    <h2>Create</h2>


    @using(Html.BeginForm(@*"CreatePartial","Modules",new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "replace", InsertionMode = InsertionMode.Replace,
        OnSuccess = "function() { alert('success'); }" }*@))
    {
        @Html.AntiForgeryToken()
            
        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.CourseId, "CourseId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CourseId", (SelectList)ViewBag.CourseId, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModuleName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModuleName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModuleName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModuleDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModuleDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModuleDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ExpectedTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExpectedTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExpectedTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" id="btnsubmit" value="Create" class="btn btn-default" />
                </div>
            </div>
           
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @Scripts.Render("~/bundles/jqueryval")
        
</div>

<script type="text/javascript">

    $("#btnsubmit").click(function () {

        //var data = $("#myform").serialize();

        //$.ajax({
        //    type: "POST",
        //    url: "/Modules/CreatePartial",
        //    data: data,
        //    success: function (data) {
        //        if (data.status) {
                    $('#CreateModule').modal("hide");
                    $('#myform')[0].reset();
                    toastr["success"](data.message);
                //} else {
                    //$('#actionsList').modal("hide");
                    toastr["error"]("required field where not completed");
                //}

            //}
        //});

        setTimeout(function(){
            window.location.reload(1);
        }, 1000);
    });


</script>

