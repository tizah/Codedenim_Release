@model CodeninModel.Course

@{
    ViewBag.Title = "Edit Courses";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";}


    <div class="container-fluid">

        <h2>Edit</h2>

        @using (Html.BeginForm("Edit","Courses",FormMethod.Post, new { enctype = "multipart/form-data", id = "myform", @class = "tabbable paper-shadow relative" }))
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Course</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CourseId)

            <div class="form-group">
                @Html.LabelFor(model => model.CourseId, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.CourseId)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
                </div>
            </div>


            @*<div class="form-group">
            <label class="control-label col-md-2" for="CourseCategoryId">Department</label>
            <div class="col-md-10">
                @Html.DropDownList("DepartmentID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>*@


            <div class="form-group">
                @Html.LabelFor(model => model.Points, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Points, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Points, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <p class="alert"> NOTE >>> Image size must be 347 x 150 to fit at the users end. </p>
                @Html.LabelFor(model => model.FileLocation, htmlAttributes: new { @class = "control-label col-md-2" })
                <img src="~/MaterialUpload/@Model.FileLocation">
            </div>
            @* //////////////////////////////////////////////////////// *@


            <div class="form-group">

                @Html.Label("Photo", new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    <input class="form-control" type="file" id="File" name="File" />
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Video, Course Intro", new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    <input class="form-control" type="file" id="File" name="video" />
                </div>
            </div>
            @* //////////////////////////////////////////////////////// *@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button class="btn btn-success">Save</button>
                </div>
            </div>
        </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index", null, new{@class = "my-class; btn"})
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
    </div>
