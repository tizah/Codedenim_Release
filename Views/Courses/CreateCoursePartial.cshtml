


@using CodedenimWebApp.Extensions
@model CodedenimWebApp.ViewModels.CourseVm
<style>
    body {
        background: white !important;
    }
</style>
@{
    ViewBag.Title = "Create Courses";

}




<div class="container-fluid" style="margin-left: 13%">


    @using (Html.BeginForm("Create", "Courses", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <fieldset>
            <legend><h3><b>Create Course</b></h3></legend>
            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @*<div class="form-group">
                        @Html.LabelFor(model => model.CourseCategoryId, "CourseCategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CourseCategoryId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CourseCategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>*@



                <div class="form-group">
                    @Html.LabelFor(model => model.CourseCode, "Enter Course Code", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CourseCode, new { htmlAttributes = new { @class = "form-control", @autofocus = "" } })
                        @Html.ValidationMessageFor(model => model.CourseCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CourseName, "Enter Course Name", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.CoursePrice, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CoursePrice, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CoursePrice, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.CourseDescription, "Course Description", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CourseDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CourseDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ExpectedTime, "Expected Duration", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ExpectedTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ExpectedTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.CourseCode, "Select Category", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DropDownList("CourseCategoryId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CourseCode, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                @*<div class="form-group">
                        @Html.LabelFor(model => model.DateAdded, "Date Created", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.DateAdded, new { htmlAttributes = new { @class = "form-control datepicker", @readonly = true } })
                            @Html.ValidationMessageFor(model => model.DateAdded, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.Points, "Points", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Points, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Points, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ImageName, "Image Name", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.VideoName, "Video Name", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.VideoName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VideoName, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        <p class="alert"> NOTE >>> Image size must be 347 x 150 to fit at the users end. </p>

                        @Html.Label("Photo", new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <input class="form-control" type="file" id="File" name="File" />
                        </div>
                    </div>

                    <div class="form-group">

                        @Html.Label("Course Intro Video", new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <input class="form-control" type="file" id="File" name="VideoFile" />
                        </div>
                    </div>*@

                @*<div class="form-group">
                        @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })

                        <div class="editor-field">
                            @Html.FileFor(model => model.File)
                            @Html.ValidationMessageFor(model => model.File)
                        </div>
                    </div>*@
                <div class="form-group"></div>
                <div class="clearfix"></div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button class="btn btn-success"><span>Create</span> <i class="fa fa-check-square-o"></i></button>
                        <button class="btn-inverse btn" type="reset"><span>Reset</span> <i class="fa fa-undo"></i></button>
                    </div>
                </div>
            </div>
        </fieldset>
    }


</div>



<script type="text/javascript">
    $(document).ready(function () {
        $('.datepicker').datepicker(
            {
                dateFormat: "dd-mm-yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            }
        );

    });



    function Edit(subjecId) {
        var url = "/Classes/Save?id=" + subjecId;
        //$('#actionsList').modal("show");
        //window.alert(url);
        $('#myModalDivBody').load(url,
            function () {
                $('#actionsList').modal("show");
            });
    };
</script>


