@model CodeninModel.CBTE.QuizRule
<style>
    body {
        background: white !important;
    }
</style>
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<div class="container-fluid" style="margin-left: 13%">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <fieldset>
            <legend><h3><b>Create Quiz Rule</b></h3></legend>
            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.ModuleId, "Module", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.DropDownList("ModuleId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ModuleId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ScorePerQuestion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ScorePerQuestion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ScorePerQuestion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TotalQuestion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.TotalQuestion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TotalQuestion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MaximumTime, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.MaximumTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MaximumTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button class="btn btn-success"><span>Create</span> <i class="fa fa-check-square-o"></i></button>
                        <button class="btn-inverse btn" type="reset"><span>Reset</span> <i class="fa fa-undo"></i></button>
                    </div>
                </div>
            </div>
        </fieldset>
    }

    </div>
