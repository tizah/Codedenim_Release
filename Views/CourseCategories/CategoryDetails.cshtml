@model CodedenimWebApp.ViewModels.CourseCategoryDetailVm
 @using Microsoft.AspNet.Identity;
@using CodedenimWebApp.Models

@{
    ViewBag.Title = "CategoryDetails";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";

}


<h2>PROCEED TO PAYMENT</h2>


<div class="row">

    <div class="col-md-6">

        <div class="card">
            <div class="card-head style-primary">
                <header>
                    <div class="form-header  purple darken-4">

                    </div>

                </header>

            </div><!--end .card-head -->
   @if (User.IsInRole(RoleName.OtherStudent) || User.IsInRole(RoleName.Student))
   {
        <fieldset>
            <legend class="alert alert-green-300">Pay with PayPal:</legend>
            @Html.Partial("PaypalCheckout")

        </fieldset>
        <br /><br />
   }
        <legend class="alert alert-green-300">Pay with Remita:</legend>
        <div class="media-body">

            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="media-left">
                        <div class="icon-block half img-circle bg-primary">
                            <i class="fa fa-credit-card"></i>
                        </div>
                    </div>.
                    <p>
                        <div class="card-body">
                            @using (Html.BeginForm("CreatePayment", "CourseCategories", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.StudentId)

                        @Html.HiddenFor(model => model.CourseCategoryId)
                        @Html.HiddenFor(model => model.payerName)
                        @Html.HiddenFor(model => model.payerEmail)
                        @Html.HiddenFor(model => model.payerPhone)
                        @Html.HiddenFor(model => model.orderId)
                        @Html.HiddenFor(model => model.merchantId)
                        @Html.HiddenFor(model => model.serviceTypeId)
                        @Html.HiddenFor(model => model.responseurl)
                        @Html.HiddenFor(model => model.amt)
                        @Html.HiddenFor(model => model.paymenttype)


                        <div class="form-horizontal">
                            @*<img class="img-responsive" src="~/Content/Images/remita-payment-logo-horizonal.png" width="475" />*@

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.Label("Student Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @*@Html.DropDownList("StudentId", null, htmlAttributes: new { @class = "form-control" })*@
                                    @Html.EditorFor(model => model.payerName, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                    @*@Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })*@
                                </div>
                            </div>

                            @*<div class="form-group">
                            @Html.LabelFor(model => model.FeeCategoryId, "FeeCategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("FeeCategoryId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.EditorFor(model => model.FeeCategoryId, new { htmlAttributes = new { @class = "form-control" } })

                                @Html.ValidationMessageFor(model => model.FeeCategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>*@



                            <div class="form-group">
                                @Html.LabelFor(model => model.amt, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.amt, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                    @Html.ValidationMessageFor(model => model.amt, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.payerEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.payerEmail, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                    @Html.ValidationMessageFor(model => model.payerEmail, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Payment Type", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.EnumDropDownListFor(model => model.RemitaPaymentType, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.RemitaPaymentType, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="CONFIRM AND PROCEED" class="btn btn-primary btn-lg" />
                                </div>
                            </div>

                            <img class="img-responsive" src="~/Content/img/remita-horizontal.png" />
                        </div>
            }
                        </div>
                    </p>
                </div>
            </div>
        </div>



        </div>




    </div>

    <div class="col-md-6">
        <div class="card">
            <div class="card-head style-primary">
                <header>
                    <div class="form-header  purple darken-4">
                        <h3>Fee Breakdown</h3>
                    </div>

                </header>

            </div><!--end .card-head -->
            <div class="card-body">

                <div class="row" data-toggle="isotope">

                    @foreach (var item in Model.AssignedCourses)
                    {

                        <div class="item col-xs-12 col-sm-6 col-lg-4">
                            <div class="panel panel-default paper-shadow" data-z="0.5">
                                <div class="panel-heading">
                                    <div class="media media-clearfix-xs-min v-middle">
                                        <div class="media-body text-caption text-light">
                                            Module Number @item.Courses.Modules.Count
                                        </div>
                                        <div class="media-right">
                                            <div class="progress progress-mini width-100 margin-none">
                                                <div class="progress-bar progress-bar-blue-300" role="progressbar" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100" style="width: 75%;">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="cover overlay cover-image-full hover">
                                    <span class="img icon-block height-100 bg-primary"></span>
                                    <a href="#" class="padding-none overlay overlay-full icon-block bg-primary">
                                        <span class="v-center">
                                            <i class="fa fa-css3"></i>
                                        </span>
                                    </a>
                                    <a href="" class="overlay overlay-full overlay-hover overlay-bg-white">
                                        <span class="v-center">
                                            <span class="btn btn-circle btn-primary btn-lg"><i class="fa fa-graduation-cap"></i></span>
                                        </span>
                                    </a>
                                </div>

                                <hr class="margin-none" />
                                <div class="panel-body">
                                    @item.Courses.CourseName<br />

                                    <br />
                                    @*<a class="btn btn-white btn-flat paper-shadow relative" data-z="0" data-hover-z="1" data-animated href="@Url.Action("StartPayment","CourseCategories", new {id = item.CourseCategoryId})">Go to courses</a>*@
                                    @*<a class="btn btn-white btn-flat paper-shadow relative" data-z="0" data-hover-z="1" data-animated href="@Url.Action("CategoryDetails", "CourseCategories", new { id = item.CourseCategoryId })">Pay for courses</a>*@
                                </div>
                            </div>
                        </div>
                    }
                </div>

            </div>
        </div>

    </div>





</div>

<script src="https://code.jquery.com/jquery-3.3.1.min.js"
        integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
        crossorigin="anonymous"></script>
<script>

    $(function () {
        var convertedValue;
        $('#JsChosen').change(
            function () {
                var selectedValue = this.value;

                var inputbox = $('.exchangeRateValue');
               // $('#colorpickerField1').attr('value', '#000000')

                //get the value and convert the currency
                if (selectedValue === "USD") {
                    convertedValue = 100;
                    inputbox.attr('value',convertedValue);
                   // alert("Us Dollars selected " + convertedValue);
                } else {
                    convertedValue = 75;
                    inputbox.attr('value', convertedValue);
                  //  alert("Euro selected " + convertedValue );
                }

            });
        $("#paypalForm").submit(function () {
            var currentValue = $('.exchangeRateValue').val();
            if (convertedValue !== currentValue) {
             //   alert("all is okay")
                this.submit();
            }else {
                alert("what is going on?  current Value :" + currentValue + ",  Convertd Value : " + convertedValue);
                this.preventDefault();
            }
                                });
                        });

</script>

