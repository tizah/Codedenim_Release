@model CodeninModel.Module
<style>
    body {
        background: white !important;
    }
</style>
@{
    ViewBag.Title = "Create Module";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<div class="container-fluid" style="margin-left: 13%">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <fieldset>
                <legend><h3><b>Create Module</b></h3></legend>
                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @*<div class="form-group">
                            @Html.LabelFor(model => model.CourseId, "CourseId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("CourseId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.CourseId, "Select Course", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.DropDownList("CourseId",(IEnumerable<SelectListItem>)ViewBag.CourseId, null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ModuleName,"Module Name", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ModuleName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ModuleName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ModuleDescription,"Module Description", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ModuleDescription, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ModuleDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ExpectedTime, "Expected Time", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ExpectedTime, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ExpectedTime, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group"></div>
                    <div class="clearfix"></div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button class="btn btn-success"><span>Create</span> <i class="fa fa-check-square-o"></i></button>
                            <button class="btn-inverse btn" type="reset"><span>Reset</span> <i class="fa fa-undo"></i></button>
                        </div>
                    </div>
                </div>
                </fieldset>
                }

              

                @Scripts.Render("~/bundles/jqueryval")

</div>

